import React, { useState, useEffect } from 'react';
import { useRef } from 'react';
import { RefreshTrangle } from './Loading';

export const CountdownTimer = ({
  loadingTrigger,
  loadingPause,
}: {
  loadingTrigger: boolean;
  loadingPause?: boolean;
}) => {
  return (
    <div className="circle_process bg-chartBg rounded-full relative flex justify-center items-center">
      <div className="circle_center bg-cardBg rounded-full inline-block flex items-center justift-center">
        {loadingPause ? (
          <div className="flex items-center mx-auto">
            <RefreshTrangle />
          </div>
        ) : (
          <div className="flex items-center mx-auto">
            <div
              className="w-0.5 h-1.5 rounded bg-gradientFrom"
              style={{
                marginRight: '1px',
              }}
            />
            <div
              className="w-0.5 h-1.5 rounded bg-gradientFrom "
              style={{
                marginLeft: '1px',
              }}
            />
          </div>
        )}
      </div>
      <div className="wrapper absolute top-0 right-0 overflow-hidden">
        <div
          className={`circle  absolute top-0 rounded-full ${
            !loadingTrigger && !loadingPause ? 'rightcircle' : ''
          }`}
        ></div>
      </div>

      <div className="wrapper absolute top-0 left-0 overflow-hidden">
        <div
          className={`circleleft absolute top-0 rounded-full ${
            !loadingTrigger && !loadingPause ? 'leftcircle' : ''
          }`}
          id="leftcircle"
        ></div>
      </div>
    </div>
  );
};
export const WarnTriangle = () => {
  return (
    <svg
      width="20"
      height="18"
      viewBox="0 0 20 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M11.1274 6.07879C11.1317 6.04034 11.1339 6.0013 11.1339 5.96175C11.1339 5.36616 10.6336 4.88335 10.0164 4.88335C9.39924 4.88335 8.89893 5.36616 8.89893 5.96175C8.89893 5.96298 8.89893 5.9642 8.89894 5.96543H8.89547L9.1473 11.1058C9.14727 11.1086 9.14726 11.1114 9.14726 11.1141C9.14726 11.5774 9.53639 11.9529 10.0164 11.9529C10.4964 11.9529 10.8855 11.5774 10.8855 11.1141C10.8855 11.1065 10.8854 11.0989 10.8852 11.0913L11.1274 6.07879ZM7.2833 2.47745C8.76956 0.0286533 11.1824 0.0339056 12.6655 2.47745L19.3081 13.4219C20.7943 15.8707 19.6164 17.8559 16.6693 17.8559H3.27955C0.335916 17.8559 -0.842329 15.8655 0.640741 13.4219L7.2833 2.47745ZM10.0164 15.4277C10.6336 15.4277 11.1339 14.9449 11.1339 14.3493C11.1339 13.7537 10.6336 13.2709 10.0164 13.2709C9.39924 13.2709 8.89893 13.7537 8.89893 14.3493C8.89893 14.9449 9.39924 15.4277 10.0164 15.4277Z"
        fill="#DE9450"
      />
    </svg>
  );
};
export const ErrorTriangle = ({ expand }: { expand?: boolean }) => {
  return (
    <svg
      width={expand ? '46' : '20'}
      height={expand ? '40' : '18'}
      viewBox="0 0 20 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M11.1274 6.07879C11.1317 6.04034 11.1339 6.0013 11.1339 5.96175C11.1339 5.36616 10.6336 4.88335 10.0164 4.88335C9.39924 4.88335 8.89893 5.36616 8.89893 5.96175C8.89893 5.96298 8.89893 5.9642 8.89894 5.96543H8.89547L9.1473 11.1058C9.14727 11.1086 9.14726 11.1114 9.14726 11.1141C9.14726 11.5774 9.53639 11.9529 10.0164 11.9529C10.4964 11.9529 10.8855 11.5774 10.8855 11.1141C10.8855 11.1065 10.8854 11.0989 10.8852 11.0913L11.1274 6.07879ZM7.2833 2.47745C8.76956 0.0286533 11.1824 0.0339056 12.6655 2.47745L19.3081 13.4219C20.7943 15.8707 19.6164 17.8559 16.6693 17.8559H3.27955C0.335916 17.8559 -0.842329 15.8655 0.640741 13.4219L7.2833 2.47745ZM10.0164 15.4277C10.6336 15.4277 11.1339 14.9449 11.1339 14.3493C11.1339 13.7537 10.6336 13.2709 10.0164 13.2709C9.39924 13.2709 8.89893 13.7537 8.89893 14.3493C8.89893 14.9449 9.39924 15.4277 10.0164 15.4277Z"
        fill="#DE5050"
      />
    </svg>
  );
};

export const TipTriangle = ({
  h,
  c,
  w,
}: {
  h?: string;
  w?: string;
  c?: string;
}) => {
  return (
    <svg
      width={w || '20'}
      height={h || '18'}
      viewBox="0 0 20 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M11.1274 6.07879C11.1317 6.04034 11.1339 6.0013 11.1339 5.96175C11.1339 5.36616 10.6336 4.88335 10.0164 4.88335C9.39924 4.88335 8.89893 5.36616 8.89893 5.96175C8.89893 5.96298 8.89893 5.9642 8.89894 5.96543H8.89547L9.1473 11.1058C9.14727 11.1086 9.14726 11.1114 9.14726 11.1141C9.14726 11.5774 9.53639 11.9529 10.0164 11.9529C10.4964 11.9529 10.8855 11.5774 10.8855 11.1141C10.8855 11.1065 10.8854 11.0989 10.8852 11.0913L11.1274 6.07879ZM7.2833 2.47745C8.76956 0.0286533 11.1824 0.0339056 12.6655 2.47745L19.3081 13.4219C20.7943 15.8707 19.6164 17.8559 16.6693 17.8559H3.27955C0.335916 17.8559 -0.842329 15.8655 0.640741 13.4219L7.2833 2.47745ZM10.0164 15.4277C10.6336 15.4277 11.1339 14.9449 11.1339 14.3493C11.1339 13.7537 10.6336 13.2709 10.0164 13.2709C9.39924 13.2709 8.89893 13.7537 8.89893 14.3493C8.89893 14.9449 9.39924 15.4277 10.0164 15.4277Z"
        fill={c || '#DE5050'}
      />
    </svg>
  );
};

export const SwapOutLineRefresh = (props: any) => {
  return (
    <svg
      {...props}
      width="12"
      height="12"
      viewBox="0 0 12 12"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clip-path="url(#clip0_3958_190)">
        <path
          d="M11.1326 1.71375V4.71172C11.1326 4.96931 10.9687 5.13323 10.7111 5.13323H7.71312C7.54919 5.13323 7.40864 5.03958 7.31501 4.87565C7.24472 4.71172 7.26812 4.54779 7.40865 4.40725L8.34547 3.49383C7.68975 2.88476 6.91674 2.58029 6.00332 2.58029C5.5583 2.58029 5.11329 2.67406 4.66827 2.83799C4.22325 3.0253 3.87201 3.28301 3.59092 3.58748C3.28644 3.86857 3.02874 4.21981 2.84143 4.66483C2.49006 5.53149 2.49006 6.46829 2.84143 7.33494C3.02874 7.77997 3.28644 8.1312 3.59092 8.41229C3.87201 8.71678 4.22325 8.97448 4.66827 9.16178C5.11329 9.32571 5.5583 9.41949 6.00332 9.41949C6.542 9.41949 7.03389 9.30233 7.50231 9.06814C7.99421 8.85732 8.39235 8.52946 8.6968 8.08443C8.79047 8.03755 8.83736 8.01417 8.86073 8.01417C8.93102 8.01417 8.97791 8.03755 9.02466 8.08443L9.93823 8.99785C9.98497 9.04474 10.0084 9.09152 10.0084 9.13841C10.0084 9.16178 9.98498 9.20867 9.96161 9.27897C9.44631 9.8879 8.86075 10.3563 8.18155 10.6608C7.54922 10.9653 6.8231 11.1292 6.00333 11.1292C5.27723 11.1292 4.59801 10.9888 4.01244 10.7311C3.33321 10.4266 2.77115 10.0518 2.37302 9.63019C1.95139 9.23207 1.57664 8.67 1.27217 7.99077C0.733495 6.79627 0.733495 5.20351 1.27217 4.009C1.57664 3.32978 1.95139 2.76772 2.37302 2.36959C2.77115 1.94795 3.33321 1.57321 4.01243 1.26874C4.598 1.01103 5.27722 0.870605 6.00332 0.870605C6.65915 0.870605 7.29149 0.987646 7.90042 1.22185C8.53288 1.47955 9.09495 1.83079 9.53996 2.27581L10.4066 1.40928C10.5237 1.29212 10.6877 1.24535 10.875 1.3155C11.0389 1.40928 11.1326 1.54982 11.1326 1.71375Z"
          fill="#566069"
        />
      </g>
      <defs>
        <clipPath id="clip0_3958_190">
          <rect width="12" height="12" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};
